<Window x:Class="InvMgr.InventoryItemWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:InvMgr"
        mc:Ignorable="d"
        Title="Inventory Item" Width="300" Height="280"
        FocusManager.FocusedElement="{Binding ElementName=uxDescription}"
        Loaded="Window_Loaded"
        WindowStartupLocation="CenterOwner">

    <Grid x:Name="uxGrid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="20" />
            <RowDefinition Height="20" />
            <RowDefinition Height="20" />
            <RowDefinition Height="20" />
            <RowDefinition Height="20" />
            <RowDefinition Height="20" />
            <RowDefinition Height="20" />
            <RowDefinition Height="20" />
            <RowDefinition Height="20" />
            <RowDefinition Height="20" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <TextBlock Grid.Column="0" Grid.Row="0" HorizontalAlignment="Left">Description:</TextBlock>
        <TextBox x:Name="uxDescription" Grid.Column="1" Grid.Row="0">
            <Binding Path="description" UpdateSourceTrigger="PropertyChanged">
                <Binding.ValidationRules>
                    <local:EmptyStringValidationRule ValidationStep="RawProposedValue"/>
                </Binding.ValidationRules>
            </Binding>
            <Validation.ErrorTemplate>
                <ControlTemplate>
                    <StackPanel>
                        <AdornedElementPlaceholder x:Name="textBox"/>
                        <TextBlock Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                    </StackPanel>
                </ControlTemplate>
            </Validation.ErrorTemplate>            
        </TextBox>

        <TextBlock Grid.Column="0" Grid.Row="2" HorizontalAlignment="Left">Location:</TextBlock>
        <TextBox x:Name="uxLocation" Grid.Column="1" Grid.Row="2">
            <Binding Path="location" UpdateSourceTrigger="PropertyChanged">
                <Binding.ValidationRules>
                    <local:EmptyStringValidationRule ValidationStep="RawProposedValue"/>
                </Binding.ValidationRules>
            </Binding>
            <Validation.ErrorTemplate>
                <ControlTemplate>
                    <StackPanel>
                        <AdornedElementPlaceholder x:Name="textBox"/>
                        <TextBlock Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                    </StackPanel>
                </ControlTemplate>
            </Validation.ErrorTemplate>
        </TextBox>

        <TextBlock Grid.Column="0" Grid.Row="4" HorizontalAlignment="Left">Price:</TextBlock>
        <TextBox x:Name="uxPrice" Grid.Column="1" Grid.Row="4">
            <Binding Path="price" UpdateSourceTrigger="PropertyChanged">
                <Binding.ValidationRules>
                    <local:StringToIntValidationRule ValidationStep="RawProposedValue"/>
                </Binding.ValidationRules>
            </Binding>
            <Validation.ErrorTemplate>
                <ControlTemplate>
                    <StackPanel>
                        <AdornedElementPlaceholder x:Name="textBox"/>
                        <TextBlock Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                    </StackPanel>
                </ControlTemplate>
            </Validation.ErrorTemplate>
        </TextBox>

        <TextBlock Grid.Column="0" Grid.Row="6" HorizontalAlignment="Left">Cost:</TextBlock>
        <TextBox x:Name="uxCost"  Grid.Column="1" Grid.Row="6">
            <Binding Path="cost" UpdateSourceTrigger="PropertyChanged">
                <Binding.ValidationRules>
                    <local:StringToIntValidationRule ValidationStep="RawProposedValue"/>
                </Binding.ValidationRules>
            </Binding>
            <Validation.ErrorTemplate>
                <ControlTemplate>
                    <StackPanel>
                        <AdornedElementPlaceholder x:Name="textBox"/>
                        <TextBlock Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                    </StackPanel>
                </ControlTemplate>
            </Validation.ErrorTemplate>
        </TextBox>

        <TextBlock Grid.Column="0" Grid.Row="8" HorizontalAlignment="Left">Quantity:</TextBlock>
        <TextBox x:Name="uxQuantity" Grid.Column="1" Grid.Row="8">
            <Binding Path="quantity" UpdateSourceTrigger="PropertyChanged">
                <Binding.ValidationRules>
                    <local:StringToIntValidationRule ValidationStep="RawProposedValue"/>
                </Binding.ValidationRules>
            </Binding>
            <Validation.ErrorTemplate>
                <ControlTemplate>
                    <StackPanel>
                        <AdornedElementPlaceholder x:Name="textBox"/>
                        <TextBlock Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                    </StackPanel>
                </ControlTemplate>
            </Validation.ErrorTemplate>
        </TextBox>

        <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="10" HorizontalAlignment="Right">
            <Button x:Name="uxSubmit"  Content="Add" MinWidth="10" HorizontalAlignment="Center" Click="uxSubmit_Click" Margin="10">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="IsEnabled" Value="false" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=uxDescription, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=uxLocation, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=uxPrice, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=uxCost, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=uxQuantity, Path=(Validation.HasError)}" Value="false" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="true" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button x:Name="uxCancel"  MinWidth="10" HorizontalAlignment="Center" Click="uxCancel_Click" Margin="10">Cancel</Button>
        </StackPanel>
    </Grid>
</Window>
